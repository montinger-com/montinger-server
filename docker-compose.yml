services:
  montinger-server-prod:
    container_name: montinger-server-${APP_ENV}
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:3000"
    environment:
      GO111MODULE: "on"
      MODE: ${MODE}
      APP_ENV: ${APP_ENV}
      HOST: ${HOST}
      PORT: ${PORT}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      ISSUER: ${ISSUER}
      JWT_ACCESS_EXPIRES_IN_SECONDS: ${JWT_ACCESS_EXPIRES_IN_SECONDS}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_EXPIRES_IN_SECONDS: ${JWT_REFRESH_EXPIRES_IN_SECONDS}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PROMETHEUS_HOST: ${PROMETHEUS_HOST}
      PROMETHEUS_PORT: ${PROMETHEUS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASS: ${REDIS_PASS}
      REDIS_DB: ${REDIS_DB}
    profiles:
      - production
    networks:
      - montinger-prod-network

  prometheus-prod:
    container_name: prometheus-${APP_ENV}
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.size=50GB"
    networks:
      - montinger-prod-network

networks:
  montinger-prod-network:

volumes:
  prometheus-data: